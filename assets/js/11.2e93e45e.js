(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{579:function(s,a,t){"use strict";t.r(a);var n=t(13),e=Object(n.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",{attrs:{id:"登录远程-docker"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#登录远程-docker"}},[s._v("#")]),s._v(" 登录远程 docker")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" login --username"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("****@sina.cn registry.cn-hangzhou.aliyuncs.com --password"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'*****'")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 用户名          # 镜像仓库地址                          # 密码")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# --username     registry.cn-hangzhou.aliyuncs.com     --password")]),s._v("\n")])])]),t("p",[s._v("在构建镜像之前，需要在当前目录下，配置 dockerfile")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建文件")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("touch")]),s._v(" dockerfile\n")])])]),t("p",[s._v("dockerfile")]),s._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 获取 nginx")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("FROM")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("nginx")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("latest\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 为了文件 COPY 覆盖，我多做了一步, 先删除镜像中的  default.conf 文件")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("RUN")]),s._v(" rm "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("rf "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("etc"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("nginx"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("conf"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("d"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("conf\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 复制当前目录下的 default.conf ")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("COPY")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("conf "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("etc"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("nginx"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("conf"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("d"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("conf\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 复制当前目录的静态资源")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("COPY")]),s._v(" www"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("www"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 暴露 80 端口")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("EXPOSE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v("\n\n")])])]),t("p",[s._v("default.conf")]),s._v(" "),t("div",{staticClass:"language-conf extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("server {\n    listen       80;\n    listen  [::]:80;\n    server_name  localhost;\n\n    # access_log  /var/log/nginx/host.access.log  main;\n\n    location / {\n        root   /var/www;\n        index  index.html index.htm;\n    }\n\n    # error_page  404              /404.html;\n\n   \n    error_page   500 502 503 504  /50x.html;\n    location = /50x.html {\n        root   /usr/share/nginx/html;\n    }\n    \n}\n")])])]),t("p",[s._v("本地项目目录")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n├─ dockerfile             \n├─ default.conf     "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# nginx 配置文件")]),s._v("\n└─ www\n   ├─ index.html\n   ├─ index.css\n   └─ index.css\n\n")])])]),t("h2",{attrs:{id:"本地构建镜像"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#本地构建镜像"}},[s._v("#")]),s._v(" 本地构建镜像")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" build -t registry.cn-hangzhou.aliyuncs.com/container_name/project_name:v0.0.1 "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 构建     # 为容器打上标签")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# build   -t")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 镜像仓库地址                            # 容器名称         # 项目名称        # 版本号")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# registry.cn-hangzhou.aliyuncs.com/    container_name/   project_name:   v0.0.1")]),s._v("\n\n")])])]),t("h2",{attrs:{id:"查看本地镜像"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#查看本地镜像"}},[s._v("#")]),s._v(" 查看本地镜像")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" images\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# v0.0.1 已经本地构建成功 ")]),s._v("\nREPOSITORY                                                      TAG       IMAGE ID       CREATED      SIZE\nregistry.cn-hangzhou.aliyuncs.com/container_name/project_name   v0.0.1    ad0dceeb8821   "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" days ago   142MB\n\n")])])]),t("h2",{attrs:{id:"将本地镜像上传到远程镜像仓库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#将本地镜像上传到远程镜像仓库"}},[s._v("#")]),s._v(" 将本地镜像上传到远程镜像仓库")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" push registry.cn-hangzhou.aliyuncs.com/container_name/project_name:v0.0.1\n")])])]),t("h2",{attrs:{id:"查看容器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#查看容器"}},[s._v("#")]),s._v(" 查看容器")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" -a\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 显示全部容器（默认只显示运行中的容器）")]),s._v("\n-a\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 显示最近创建的容器（包括所有状态的容器）")]),s._v("\n-l \n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 显示总的文件大小")]),s._v("\n-s\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 显示完整的镜像 ID")]),s._v("\n–no-trunc\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 静默模式，只显示容器 ID")]),s._v("\n-q\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" -a\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 输出结果")]),s._v("\nCONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 容器 ID         # 使用的镜像  # 启动容器时运行的命令    # 创建时间   # 容器状态   # 端口及连接类型   # 容器名")]),s._v("\nCONTAINER ID     IMAGE        COMMAND               CREATED     STATUS      PORTS           NAMES\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 容器状态（7种#）")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 已创建    # 重启中        # 运行中    # 迁移中    # 暂停    # 停止     # 死亡")]),s._v("\ncreated    restarting     running    removing   paused   exited     dead\n\n")])])])])}),[],!1,null,null,null);a.default=e.exports}}]);